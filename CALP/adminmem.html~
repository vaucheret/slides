<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8"/>
<title>Conceptos Avanzados en Lenguajes de Programación</title>
<meta name="author" content="(Administración de Almacenamiento)"/>
<style type="text/css">
.underline { text-decoration: underline; }
</style>
<link rel="stylesheet" href="../reveal.js-master/css/reveal.css"/>

<link rel="stylesheet" href="../reveal.js-master/css/theme/solarized.css" id="theme"/>


<!-- If the query includes 'print-pdf', include the PDF print sheet -->
<script>
    if( window.location.search.match( /print-pdf/gi ) ) {
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = '../reveal.js-master/css/print/pdf.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    }
</script>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
</head>
<body>
<div class="reveal">
<div class="slides">
<section id="sec-title-slide" data-background="" data-background-size="" data-background-repeat="" data-background-transition=""><h1 class="title">Conceptos Avanzados en Lenguajes de Programación</h1><h2 class="author">Administración de Almacenamiento</h2><h2 class="date">2016-08-29 lun 00:00</h2><p class="date">Created: 2017-10-17 mar 15:39</p>
</section>
<section id="table-of-contents">
<nav id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#/slide-org30a0d62">Introducción</a>
<ul>
<li><a href="#/slide-orga9c1d5d">Tiempo de Vida del Objeto y Ligadura</a></li>
<li><a href="#/slide-orgd5e0a12">Tiempos de vida distintos</a></li>
<li><a href="#/slide-org72e0d4c">Mecanismos de alojamiento</a></li>
<li><a href="#/slide-org3e608f9">Alojamiento Estático</a>
<ul>
<li><a href="#/slide-orgec56092">Subrutinas</a></li>
</ul>
</li>
<li><a href="#/slide-org5766037">Alojamiento basado en Pila</a>
<ul>
<li><a href="#/slide-orge3de739">Subrutinas</a></li>
<li><a href="#/slide-orgd83d4f2">Alojamiento basado en Pila</a></li>
<li><a href="#/slide-orge22d4a5">Alojamiento basado en Pila</a></li>
</ul>
</li>
<li><a href="#/slide-org9b6d6b1">Alojamiento basado en <i>Heap</i></a>
<ul>
<li><a href="#/slide-org1ec9d90">Alojamiento basado en <i>Heap</i></a></li>
<li><a href="#/slide-orgfa13bc6">Alojamiento basado en <i>Heap</i></a></li>
<li><a href="#/slide-org4803ec6">Alojamiento basado en <i>Heap</i></a></li>
<li><a href="#/slide-orgff0535f">Alojamiento basado en <i>Heap</i></a></li>
<li><a href="#/slide-orgefe713c">Alojamiento basado en <i>Heap</i></a></li>
<li><a href="#/slide-orgf57e428">Recolección de Basura</a></li>
<li><a href="#/slide-orge61379b">Trazado de la colección</a></li>
<li><a href="#/slide-org392eb1e">Recolección de Basura</a></li>
<li><a href="#/slide-org142dfb6">Recolección de Basura</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</nav>
</section>

<section>
<section id="slide-org30a0d62">
<div class="slide-header"></div>
<h2 id="org30a0d62">Introducción</h2>
<div class="outline-text-2" id="text-org30a0d62">
</div><div class="slide-footer"></div>
</section>
</section>
<section>
<section id="slide-orga9c1d5d">
<div class="slide-header"></div>
<h3 id="orga9c1d5d">Tiempo de Vida del Objeto y Ligadura</h3>
<ul>
<li>Creación del objeto</li>
<li>Creación de las ligaduras</li>
<li>Referencias a variables, subrutinas, tipos, todos los cuales usan
las ligaduras</li>
<li>Desactivación y reactivación de ligaduras que pueden estar
temporariamente en desuso</li>
<li>Destrucción de ligaduras</li>
<li>Destrucción de los objetos</li>

</ul>

<div class="slide-footer"></div>
</section>
</section>
<section>
<section id="slide-orgd5e0a12">
<div class="slide-header"></div>
<h3 id="orgd5e0a12">Tiempos de vida distintos</h3>
<ul>
<li>Referencias colgadas
<ul>
<li>La ligadura sobrevive al objeto</li>

</ul></li>
<li>Almacenamiento sin referencias (basura)
<ul>
<li>El objeto sobrevive a su ligadura</li>

</ul></li>

</ul>


<div class="slide-footer"></div>
</section>
</section>
<section>
<section id="slide-org72e0d4c">
<div class="slide-header"></div>
<h3 id="org72e0d4c">Mecanismos de alojamiento</h3>
<ul>
<li>Estático
<ul>
<li>A los objetos se les da una dirección absoluta que es retenida a
través de la ejecución del programa</li>

</ul></li>
<li>Basado en Pila
<ul>
<li>Los objetos son alojados y desalojados en un orden LIFO</li>

</ul></li>
<li><i>Heap</i>
<ul>
<li>Los objetos pueden ser ser alojados y desalojados en momentos
arbitrarios. Requiere algoritmos de administración mas generales y caros.</li>

</ul></li>

</ul>

<div class="slide-footer"></div>
</section>
</section>
<section>
<section id="slide-org3e608f9">
<div class="slide-header"></div>
<h3 id="org3e608f9">Alojamiento Estático</h3>
<ul>
<li>Código</li>
<li>Variables Globales</li>
<li>variables <i>static</i> u <i>own</i></li>
<li>constantes explícitas</li>
<li>tablas de soporte en tiempo de ejecución</li>

</ul>

<div class="slide-footer"></div>
</section>
<section id="slide-orgec56092">
<div class="slide-header"></div>
<h4 id="orgec56092">Subrutinas</h4>

<figure>
<img src="aljamestaticosub.png" alt="aljamestaticosub.png">

</figure>

<div class="slide-footer"></div>
</section>
</section>
<section>
<section id="slide-org5766037">
<div class="slide-header"></div>
<h3 id="org5766037">Alojamiento basado en Pila</h3>
<ul>
<li>Pila central para:
<ul>
<li>parámetros</li>
<li>variables locales</li>
<li>datos temporales</li>

</ul></li>
<li>Porqué una Pila?
<ul>
<li>aloja espacio para rutinas recursivas (no necesario en FORTRAN sin recursión)</li>
<li>reuso del espacio (En todos los lenguajes)</li>

</ul></li>

</ul>

<div class="slide-footer"></div>
</section>
<section id="slide-orge3de739">
<div class="slide-header"></div>
<h4 id="orge3de739">Subrutinas</h4>

<figure>
<img src="alojpilasubr.png" alt="alojpilasubr.png">

</figure>

<div class="slide-footer"></div>
</section>
<section id="slide-orgd83d4f2">
<div class="slide-header"></div>
<h4 id="orgd83d4f2">Alojamiento basado en Pila</h4>
<ul>
<li>Contenido de un Registro de Activación
<ul>
<li>Argumentos y Resultado</li>
<li>variables locales</li>
<li>Datos temporales</li>
<li>Datos de mantenimiento (registros guardados, número de lineas
estático, links etc)</li>

</ul></li>
<li>A las variables locales y Argumentos se les asigna un desplazamiento
FIJO (a partir del puntero de pila o puntero de registro de
activación) en tiempo de compilación.</li>

</ul>

<div class="slide-footer"></div>
</section>
<section id="slide-orge22d4a5">
<div class="slide-header"></div>
<h4 id="orge22d4a5">Alojamiento basado en Pila</h4>
<ul>
<li>El mantenimiento de la Pila es responsabilidad de la <i>secuencia de
llamado</i> del llamador, y de el <i>prologo</i> y el <i>epilogo</i> de la
subrutina llamada.
<ul>
<li>se ahorra espacio colocando todo lo posible en el <i>prologo</i> y en
el <i>epilogo</i></li>
<li>se puede ahorrar tiempo
<ul>
<li>colocando material en el llamador  o</li>
<li>combinado lo que es conocido en ambos lugares (optimización interprocedural)</li>

</ul></li>

</ul></li>

</ul>

<div class="slide-footer"></div>
</section>
</section>
<section>
<section id="slide-org9b6d6b1">
<div class="slide-header"></div>
<h3 id="org9b6d6b1">Alojamiento basado en <i>Heap</i></h3>
<ul>
<li>Alojamiento Dinámico</li>

</ul>


<figure>
<img src="alojdinheap.png" alt="alojdinheap.png">

</figure>

<div class="slide-footer"></div>
</section>
<section id="slide-org1ec9d90">
<div class="slide-header"></div>
<h4 id="org1ec9d90">Alojamiento basado en <i>Heap</i></h4>
<ul>
<li>Muchas posibles estrategias</li>
<li>compromiso entre espacio y tiempo</li>
<li>Fragmentación
<ul>
<li>interna (se aloja un bloque que es mas grande que el requerido
para el objeto)</li>
<li>externa (cuando los bloques asignados para los objetos de datos
estan distribuidos en todo el heap de tal modo que el espacio
restante esta compuesto de muchos bloques muy pequeños. Hay
suficiente espacio pero ninguna pieza suficientemente grande para
alojar un nuevo requerimiento.</li>

</ul></li>

</ul>

<div class="slide-footer"></div>
</section>
<section id="slide-orgfa13bc6">
<div class="slide-header"></div>
<h4 id="orgfa13bc6">Alojamiento basado en <i>Heap</i></h4>
<ul>
<li>Lista ligado de bloques libres</li>
<li>Algoritmos de asignación
<ul>
<li><i>First fit</i> selecciona el primer bloque de la lista que es
suficientemente grande para satisfacer el requerimiento.</li>
<li><i>Best fit</i> busca la lista entera para encontrar el bloque mas
chico suficientemente grande para alojar el objeto</li>

</ul></li>
<li>Varias listas libres separadas por tamaño. La división puede ser
estática o dinámica
<ul>
<li><i>Buddy System</i> 
<ul>
<li>potencia de 2. si un bloque de \(2^k\) se necesita y ninguno es
diponible se divide uno de \(2^{k+1}\)</li>

</ul></li>
<li><i>Fibonacci heap</i>
<ul>
<li>numeros de fibonacci para los tamaños estandars</li>

</ul></li>

</ul></li>

</ul>


<div class="slide-footer"></div>
</section>
<section id="slide-org4803ec6">
<div class="slide-header"></div>
<h4 id="org4803ec6">Alojamiento basado en <i>Heap</i></h4>
<ul>
<li>El problema de referencias sueltas (dangling) son debidas a
<ul>
<li>desalojo explícito de objetos del <i>heap</i>
<ul>
<li>solo en lenguajes con desalojo explícito</li>

</ul></li>
<li>desalojo implícito de objetos elaborados</li>

</ul></li>
<li>Dos mecanismos de implementación para manejar referencias sueltas:
<ul>
<li>Lápidas (<i>Tombestones</i>)</li>
<li>Llaves y cerrojos (<i>Locks and Keys</i>)</li>

</ul></li>

</ul>

<div class="slide-footer"></div>
</section>
<section id="slide-orgff0535f">
<div class="slide-header"></div>
<h4 id="orgff0535f">Alojamiento basado en <i>Heap</i></h4>
<ul>
<li><i>Tombstones</i></li>

</ul>


<figure>
<img src="tombstones.png" alt="tombstones.png">

</figure>

<div class="slide-footer"></div>
</section>
<section id="slide-orgefe713c">
<div class="slide-header"></div>
<h4 id="orgefe713c">Alojamiento basado en <i>Heap</i></h4>
<ul>
<li><i>Locks and Keys</i></li>

</ul>


<figure>
<img src="lockskeys.png" alt="lockskeys.png">

</figure>

<div class="slide-footer"></div>
</section>
<section id="slide-orgf57e428">
<div class="slide-header"></div>
<h4 id="orgf57e428">Recolección de Basura</h4>
<ul>
<li><i>garbage collection</i>
<ul>
<li>esencial en lenguajes funcionales y lógicos</li>
<li>se volvió popular en lenguajes imperativos</li>

</ul></li>
<li>Contador de referencias</li>

</ul>


<figure>
<img src="contadref.png" alt="contadref.png">

</figure>

<div class="slide-footer"></div>
</section>
<section id="slide-orge61379b">
<div class="slide-header"></div>
<h4 id="orge61379b">Trazado de la colección</h4>
<ul>
<li>marcado y barrido (<i>mark and Sweep</i>
<ol>
<li>El recolector camina a través del <i>heap</i> marcando todo bloque como
"usable" tentativamente</li>
<li>Comenzando de punteros de afuera del <i>heap</i>, recursivamente
explora todos las estructuras de datos ligadas, marcando cada
bloque nuevo descubierto como "usado"</li>
<li>El recolector recorre de nuevo el <i>heap</i>, moviendo todo bloque
aún marcado como "usable" a la lista de bloques libres.</li>

</ol></li>

</ul>

<div class="slide-footer"></div>
</section>
<section id="slide-org392eb1e">
<div class="slide-header"></div>
<h4 id="org392eb1e">Recolección de Basura</h4>
<ul>
<li>Reversión de puntero</li>

</ul>


<figure>
<img src="reversepoint.png" alt="reversepoint.png"> 

</figure>

<div class="slide-footer"></div>
</section>
<section id="slide-org142dfb6">
<div class="slide-header"></div>
<h4 id="org142dfb6">Recolección de Basura</h4>
<ul>
<li>Otras alternativas
<ul>
<li>Parar y Copiar</li>
<li>Recolección Generacional</li>
<li>Recolección Conservadora</li>

</ul></li>

</ul>
<div class="slide-footer"></div>
</section>
</section>
</div>
</div>
<script src="../reveal.js-master/lib/js/head.min.js"></script>
<script src="../reveal.js-master/js/reveal.js"></script>

<script>
// Full list of configuration options available here:
// https://github.com/hakimel/reveal.js#configuration
Reveal.initialize({

controls: true,
progress: true,
history: false,
center: true,
slideNumber: 't',
rollingLinks: false,
keyboard: true,
overview: true,

theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
transition: Reveal.getQueryHash().transition || 'cube', // default/cube/page/concave/zoom/linear/fade/none
transitionSpeed: 'default',
multiplex: {
    secret: '', // null if client
    id: '', // id, obtained from socket.io server
    url: '' // Location of socket.io server
},

// Optional libraries used to extend on reveal.js
dependencies: [
 { src: '../reveal.js-master/lib/js/classList.js', condition: function() { return !document.body.classList; } },
 { src: '../reveal.js-master/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
 { src: '../reveal.js-master/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
 { src: '../reveal.js-master/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
 { src: '../reveal.js-master/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }]
,});
</script>
</body>
</html>
